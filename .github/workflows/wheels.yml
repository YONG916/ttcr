# Workflow to build and test wheels

name: ttcrpy wheel builder

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    tags:
      - "v*"
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Build the wheels for Linux, Windows and macOS for Python 3.8 and newer
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}

    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        include:
          # Window 64 bit
          # Note: windows-2019 is needed for older Python versions:
          # https://github.com/scikit-learn/scikit-learn/issues/22530
          # - os: windows-2019
          #   python-version: "3.8"
          #   platform_id: win_amd64
          - os: windows-latest
            python-version: "3.9"
            platform_id: win_amd64
          - os: windows-latest
            python-version: "3.10"
            platform_id: win_amd64
          # - os: windows-latest
          #   python-version: "3.11"
          #   platform_id: win_amd64

          # Linux 64 bit manylinux2014
          # - os: ubuntu-latest
          #   python-version: "3.8"
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014
          - os: ubuntu-latest
            python-version: "3.9"
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python-version: "3.10"
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          # - os: ubuntu-latest
          #   python-version: "3.11"
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014

          # MacOS x86_64
          # - os: macos-latest
          #   python-version: "3.8"
          #   platform_id: macosx_x86_64
          - os: macos-latest
            python-version: "3.9"
            platform_id: macosx_x86_64
          - os: macos-latest
            python-version: "3.10"
            platform_id: macosx_x86_64
          # - os: macos-latest
          #   python-version: "3.11"
          #   platform_id: macosx_x86_64

          # MacOS apple silicon
          - os: macos-latest
            python-version: "3.9"
            platform_id: macosx_arm64
          - os: macos-latest
            python-version: "3.10"
            platform_id: macosx_arm64
          # - os: macos-latest
          #   python-version: "3.11"
          #   platform_id: macosx_arm64

    steps:
      - name: Checkout ttcrpy
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Build Python wheels
        uses: pypa/cibuildwheel@v2.12.0
        with:
          python-version: ${{ matrix.python-version }}
 
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
